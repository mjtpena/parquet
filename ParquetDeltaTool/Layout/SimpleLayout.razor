@inherits LayoutComponentBase

<MudThemeProvider Theme="@_currentTheme" IsDarkMode="@_isDarkMode" />
<MudPopoverProvider />
<MudDialogProvider />
<MudSnackbarProvider />

<div class="page-wrapper">
    <MudAppBar Elevation="1" Class="app-bar">
        <MudIconButton Icon="Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" Class="d-lg-none" />
        <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
            <MudIcon Icon="Icons.Material.Filled.Storage" Color="Color.Primary" Size="Size.Large" />
            <MudText Typo="Typo.h6" Class="ml-3">Parquet & Delta Lake Tool</MudText>
        </MudStack>
        <MudSpacer />
        <MudStack Row AlignItems="AlignItems.Center" Spacing="2">
            <MudIconButton Icon="@(_isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                          Color="Color.Inherit"
                          OnClick="ToggleTheme"
                          Title="Toggle theme" />
            <MudButton Href="/viewer" 
                      Variant="Variant.Text" 
                      Color="Color.Inherit"
                      StartIcon="Icons.Material.Filled.Dashboard">
                Dashboard
            </MudButton>
        </MudStack>
    </MudAppBar>

    <MudMainContent Class="simple-main-content">
        @Body
    </MudMainContent>
</div>

<style>
    .page-wrapper {
        min-height: 100vh;
        display: flex;
        flex-direction: column;
    }
    
    .app-bar {
        backdrop-filter: blur(10px);
        background-color: rgba(248, 250, 252, 0.9) !important;
    }
    
    .simple-main-content {
        flex: 1;
        padding: 0;
    }
    
    .mud-theme-dark .app-bar {
        background-color: rgba(30, 41, 59, 0.9) !important;
    }
</style>

@code {
    private bool _isDarkMode = false;

    private MudTheme _currentTheme => new()
    {
        Typography = new Typography()
        {
            Default = new Default()
            {
                FontFamily = new[] { "Inter", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontSize = "0.875rem",
                FontWeight = 400,
                LineHeight = 1.43,
                LetterSpacing = "0.01071em"
            },
            H1 = new H1()
            {
                FontFamily = new[] { "Inter", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontSize = "2.5rem",
                FontWeight = 300,
                LineHeight = 1.167,
                LetterSpacing = "-0.01562em"
            },
            H2 = new H2()
            {
                FontFamily = new[] { "Inter", "Roboto", "Helvetica", "Arial", "sans-serif" },
                FontSize = "2rem",
                FontWeight = 300,
                LineHeight = 1.2,
                LetterSpacing = "-0.00833em"
            }
        },
        Palette = new PaletteLight()
        {
            Primary = "#2563eb", // Modern blue
            Secondary = "#64748b", // Slate gray
            Tertiary = "#10b981", // Emerald
            Info = "#0ea5e9", // Sky blue
            Success = "#059669", // Green
            Warning = "#d97706", // Amber
            Error = "#dc2626", // Red
            Dark = "#1e293b", // Dark slate
            Background = "#ffffff",
            Surface = "#f8fafc",
            AppbarBackground = "rgba(248, 250, 252, 0.8)",
            DrawerBackground = "#ffffff",
            DrawerText = "#334155",
            TextPrimary = "#0f172a",
            TextSecondary = "#64748b",
            ActionDefault = "#64748b",
            ActionDisabled = "#cbd5e1",
            ActionDisabledBackground = "#f1f5f9",
            Divider = "#e2e8f0",
            LinesDefault = "#e2e8f0",
            TableLines = "#e2e8f0"
        },
        PaletteDark = new PaletteDark()
        {
            Primary = "#3b82f6", // Brighter blue for dark mode
            Secondary = "#94a3b8", // Light slate
            Tertiary = "#34d399", // Light emerald
            Info = "#38bdf8", // Light sky
            Success = "#10b981", // Emerald
            Warning = "#f59e0b", // Amber
            Error = "#f87171", // Light red
            Dark = "#0f172a", // Very dark slate
            Background = "#0f172a",
            Surface = "#1e293b",
            AppbarBackground = "rgba(30, 41, 59, 0.8)",
            DrawerBackground = "#1e293b",
            DrawerText = "#e2e8f0",
            TextPrimary = "#f1f5f9",
            TextSecondary = "#94a3b8",
            ActionDefault = "#94a3b8",
            ActionDisabled = "#475569",
            ActionDisabledBackground = "#334155",
            Divider = "#334155",
            LinesDefault = "#334155",
            TableLines = "#334155"
        },
        LayoutProperties = new LayoutProperties()
        {
            DrawerWidthLeft = "280px",
            DrawerWidthRight = "280px",
            AppbarHeight = "64px"
        },
        ZIndex = new ZIndex()
        {
            Drawer = 1200,
            AppBar = 1100
        }
    };

    protected override async Task OnInitializedAsync()
    {
        // Load theme preference from localStorage in a real app
        await Task.CompletedTask;
    }

    private async Task ToggleTheme()
    {
        _isDarkMode = !_isDarkMode;
        // In a real app, save to localStorage
        await Task.CompletedTask;
        StateHasChanged();
    }
}