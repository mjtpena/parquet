name: Deploy to GitHub Pages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

env:
  DOTNET_VERSION: '9.0.x'

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Cache NuGet packages
      uses: actions/cache@v3
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
        restore-keys: |
          ${{ runner.os }}-nuget-
          
    - name: Cache npm dependencies
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
          
    - name: Restore .NET dependencies
      run: dotnet restore ParquetDeltaTool/ParquetDeltaTool.csproj
      
    - name: Install npm dependencies
      run: |
        cd ParquetDeltaTool
        if [ -f package-lock.json ]; then npm ci; else npm install; fi
      
    - name: Build application
      run: dotnet build ParquetDeltaTool/ParquetDeltaTool.csproj --configuration Release --no-restore
      
    - name: Test application
      run: dotnet test ParquetDeltaTool/ParquetDeltaTool.csproj --configuration Release --no-build --verbosity normal || true
      
    - name: Publish application
      run: dotnet publish ParquetDeltaTool/ParquetDeltaTool.csproj --configuration Release --output dist/ --no-build
      
    - name: Configure GitHub Pages base path
      run: |
        # Update base href for GitHub Pages
        sed -i 's|<base href="/" />|<base href="/parquet/" />|g' dist/wwwroot/index.html
        
    - name: Add .nojekyll file
      run: touch dist/wwwroot/.nojekyll
      
    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: dist/wwwroot

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
      
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4